@inherits FluentInputBase<string>
        <div style="display: inline-flex; flex-direction: column">
            @if (Label != null || AudioLabel != null)
            {
                <label for="@Name" aria-label="@(AudioLabel??Label)">@(Label??AudioLabel)</label>
            }
            <fluent-select value="@BindConverter.FormatValue(CurrentValue)" @onchange="@(EventCallback.Factory.CreateBinder<string>(this, __value => CurrentValueAsString = __value, CurrentValueAsString))" disabled="@Disabled" filled="@Filled" name="@Name" position="@Position.ToAttributeValue()" @attributes="AdditionalAttributes">@ChildContent</fluent-select>
        </div>
@code{
    [Parameter] public bool? Disabled { get; set; }

    [Parameter] public bool? Filled { get; set; }

    [Parameter] public string Name { get; set; }

    [Parameter] public Position? Position { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public string Label { get; set; }

    [Parameter] public string AudioLabel { get; set; }

    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }
}