@inherits FluentInputBase<string>
<div style="display: inline-flex; flex-direction: column">
    @if (Label != null || AudioLabel != null)
    {
        <span aria-label="@(AudioLabel??Label)">@(Label??AudioLabel)</span>
    }
    <fluent-combobox value="@BindConverter.FormatValue(CurrentValue)" @onchange="@(EventCallback.Factory.CreateBinder<string>(this, __value => CurrentValueAsString = __value, CurrentValueAsString))" filled="@Filled" disabled="@Disabled" autocomplete="@Autocomplete.ToAttributeValue()" @attributes="AdditionalAttributes">@ChildContent</fluent-combobox>
</div>
@code
{
        [Parameter] public bool? Filled { get; set; }

        [Parameter] public bool? Disabled { get; set; }

        [Parameter] public Autocomplete? Autocomplete { get; set; }

        [Parameter] public Position? Position { get; set; }

        [Parameter] public RenderFragment ChildContent { get; set; }

        [Parameter] public string Label { get; set; }

        [Parameter] public string AudioLabel { get; set; }

        protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
        {
            result = value;
            validationErrorMessage = null;
            return true;
        }
    }
